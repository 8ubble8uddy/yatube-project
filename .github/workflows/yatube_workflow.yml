name: yatube-project

on: [push]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r yatube/requirements.txt
      - name: Test with flake8, pytest and unittest
        run: |
          python -m flake8
          pytest
          cd yatube/
          python manage.py test
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./yatube/
          tags: ${{ secrets.DOCKER_USERNAME }}/yatube:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd yatube/
            sudo docker-compose stop
            sudo docker-compose rm -f web
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/yatube:latest
            touch .env
            echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T web python manage.py migrate
            sudo docker-compose exec -T web python manage.py collectstatic --no-input
            sudo docker-compose exec -T web python manage.py delete_contenttypes
            sudo docker-compose exec -T web python manage.py loaddata static/dump.json
  send_message:
    name: Send message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!